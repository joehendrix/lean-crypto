goal: GF4096.ofGF (GF.mul x y) = GaloisField2k.mul.GF4096 (GF4096.ofGF x) (GF4096.ofGF y)

query:
(define-sort Mceliece348864Ref.GF () (_ BitVec 16))
(define-fun Mceliece348864Ref.gfMask () (_ BitVec 16) #b0000111111111111)
(define-fun Mceliece348864Ref.GF.red ((tmp (_ BitVec 32))) Mceliece348864Ref.GF (let ((t (bvand tmp #b00000000011111111100000000000000))) (let ((tmp (bvxor (bvxor tmp (bvlshr t #b00000000000000000000000000001001)) (bvlshr t #b00000000000000000000000000001100)))) (let ((t (bvand tmp #b00000000000000000011000000000000))) (let ((tmp (bvxor (bvxor tmp (bvlshr t #b00000000000000000000000000001001)) (bvlshr t #b00000000000000000000000000001100)))) (bvand ((_ extract 15 0) tmp) Mceliece348864Ref.gfMask))))))
(define-fun Mceliece348864Ref.GF.mul ((x Mceliece348864Ref.GF) (y Mceliece348864Ref.GF)) Mceliece348864Ref.GF (let ((v (bvxor #b00000000000000000000000000000000 (bvmul (concat #b0000000000000000 x) (bvand (concat #b0000000000000000 y) (bvshl #b00000000000000000000000000000001 #b00000000000000000000000000000000)))))) (let ((v_1 (bvxor v (bvmul (concat #b0000000000000000 x) (bvand (concat #b0000000000000000 y) (bvshl #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))) (let ((v_2 (bvxor v_1 (bvmul (concat #b0000000000000000 x) (bvand (concat #b0000000000000000 y) (bvshl #b00000000000000000000000000000001 #b00000000000000000000000000000010)))))) (let ((v_3 (bvxor v_2 (bvmul (concat #b0000000000000000 x) (bvand (concat #b0000000000000000 y) (bvshl #b00000000000000000000000000000001 #b00000000000000000000000000000011)))))) (let ((v_4 (bvxor v_3 (bvmul (concat #b0000000000000000 x) (bvand (concat #b0000000000000000 y) (bvshl #b00000000000000000000000000000001 #b00000000000000000000000000000100)))))) (let ((v_5 (bvxor v_4 (bvmul (concat #b0000000000000000 x) (bvand (concat #b0000000000000000 y) (bvshl #b00000000000000000000000000000001 #b00000000000000000000000000000101)))))) (let ((v_6 (bvxor v_5 (bvmul (concat #b0000000000000000 x) (bvand (concat #b0000000000000000 y) (bvshl #b00000000000000000000000000000001 #b00000000000000000000000000000110)))))) (let ((v_7 (bvxor v_6 (bvmul (concat #b0000000000000000 x) (bvand (concat #b0000000000000000 y) (bvshl #b00000000000000000000000000000001 #b00000000000000000000000000000111)))))) (let ((v_8 (bvxor v_7 (bvmul (concat #b0000000000000000 x) (bvand (concat #b0000000000000000 y) (bvshl #b00000000000000000000000000000001 #b00000000000000000000000000001000)))))) (let ((v_9 (bvxor v_8 (bvmul (concat #b0000000000000000 x) (bvand (concat #b0000000000000000 y) (bvshl #b00000000000000000000000000000001 #b00000000000000000000000000001001)))))) (let ((v_10 (bvxor v_9 (bvmul (concat #b0000000000000000 x) (bvand (concat #b0000000000000000 y) (bvshl #b00000000000000000000000000000001 #b00000000000000000000000000001010)))))) (let ((v_11 (bvxor v_10 (bvmul (concat #b0000000000000000 x) (bvand (concat #b0000000000000000 y) (bvshl #b00000000000000000000000000000001 #b00000000000000000000000000001011)))))) (Mceliece348864Ref.GF.red (ite (>= 0 12) #b00000000000000000000000000000000 (ite (>= (+ 0 1) 12) v (ite (>= (+ (+ 0 1) 1) 12) v_1 (ite (>= (+ (+ (+ 0 1) 1) 1) 12) v_2 (ite (>= (+ (+ (+ (+ 0 1) 1) 1) 1) 12) v_3 (ite (>= (+ (+ (+ (+ (+ 0 1) 1) 1) 1) 1) 12) v_4 (ite (>= (+ (+ (+ (+ (+ (+ 0 1) 1) 1) 1) 1) 1) 12) v_5 (ite (>= (+ (+ (+ (+ (+ (+ (+ 0 1) 1) 1) 1) 1) 1) 1) 12) v_6 (ite (>= (+ (+ (+ (+ (+ (+ (+ (+ 0 1) 1) 1) 1) 1) 1) 1) 1) 12) v_7 (ite (>= (+ (+ (+ (+ (+ (+ (+ (+ (+ 0 1) 1) 1) 1) 1) 1) 1) 1) 1) 12) v_8 (ite (>= (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ 0 1) 1) 1) 1) 1) 1) 1) 1) 1) 1) 12) v_9 (ite (>= (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ 0 1) 1) 1) 1) 1) 1) 1) 1) 1) 1) 1) 12) v_10 (ite (>= (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ 0 1) 1) 1) 1) 1) 1) 1) 1) 1) 1) 1) 1) 12) v_11 v_11)))))))))))))))))))))))))))
(declare-const x Mceliece348864Ref.GF)
(define-fun GF4096.ofGF ((x Mceliece348864Ref.GF)) (_ BitVec 12) (ite (<= (+ 0 1) 12) ((_ extract 11 0) x) #b000000000000))
(declare-const y Mceliece348864Ref.GF)
(declare-fun GaloisField2k.mul.GF4096 ((_ BitVec 12) (_ BitVec 12)) (_ BitVec 12))
(assert (not (= (GF4096.ofGF (Mceliece348864Ref.GF.mul x y)) (GaloisField2k.mul.GF4096 (GF4096.ofGF x) (GF4096.ofGF y)))))
(check-sat)
tests/mceliece/GF4096Mul.lean:86:0: warning: declaration uses 'sorry'
